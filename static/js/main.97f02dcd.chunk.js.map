{"version":3,"sources":["components/Feedback/Feedback.module.css","components/Statistics/Statistics.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/Feedback/FeedbackOptions.js","components/Statistics/Statistics.js","components/Container/Container.js","components/Section/Section.js","components/Notification/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","s","map","option","type","button","onClick","protoType","PropTypes","arrayOf","string","isRequired","func","Statistics","good","neutral","bad","total","positivePercentage","list","number","Container","children","container","node","Section","title","section","Notification","massage","App","state","leaveFeedback","setState","countTotalFeedback","Object","values","reduce","feedback","countPositiveFeedbackPercentage","totalFeedback","Math","round","this","keys","message","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97f02dcd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Feedback_button__3yZdv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__OJ4RR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1c03J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3313_\"};","import PropTypes from 'prop-types'\r\nimport s from './Feedback.module.css';\r\n\r\nfunction FeedbackOptions({options, onLeaveFeedback}) {\r\n    return (\r\n        <div className={s.options}>\r\n            {options.map(option => (<button type=\"button\" className={s.button} key={option} onClick={() => onLeaveFeedback(option)}>{option}</button>))}\r\n        </div>\r\n    );\r\n \r\n};\r\n\r\nFeedbackOptions.protoType = {\r\n    options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n    onLeaveFeedback: PropTypes.func.isRequired\r\n}\r\n\r\nexport default FeedbackOptions;","import PropTypes from 'prop-types'\r\nimport s from './Statistics.module.css'\r\n\r\nfunction Statistics({good=0, neutral=0, bad=0, total=0, positivePercentage=0 }) {\r\n    return (\r\n        <ul className={s.list}>\r\n            <li>Good: {good }</li>\r\n            <li>Neutral: {neutral }</li>\r\n            <li>Bad: { bad}</li>\r\n            <li>Total: { total}</li>\r\n            <li>Positive Feedback: {positivePercentage }%</li>\r\n        </ul>\r\n    )\r\n};\r\n\r\nStatistics.protoType = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired\r\n}\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types'\r\nimport s from './Container.module.css'\r\n\r\nfunction Container({ children }) {\r\n    return (\r\n        <div className={s.container}>{children}</div>\r\n    )\r\n    \r\n};\r\n\r\nContainer.protoType = {\r\n    children: PropTypes.node.isRequired\r\n}\r\n\r\nexport default Container;","import PropTypes from 'prop-types'\r\nimport s from './Section.module.css'\r\n\r\nfunction Section({ title, children }) {\r\n    return (\r\n        <section className={s.section}>\r\n            <h2>{title}</h2>\r\n            {children}\r\n        </section>\r\n    )\r\n    \r\n};\r\n\r\nSection.protoType = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node.isRequired\r\n}\r\n\r\nexport default Section;","import PropTypes from 'prop-types'\r\n\r\n\r\nfunction Notification ({ massage = 'Pleace, leave feedback' }) {\r\n    return ( <p>{massage}</p>\r\n            )\r\n    };\r\n\r\nexport default Notification;\r\n\r\nNotification.protoType = {\r\n    massage: PropTypes.string.isRequired\r\n}","import './App.css';\nimport React from 'react';\nimport FeedbackOptions from './components/Feedback/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Container from './components/Container/Container';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification'\n\nclass App extends React.Component {\nstate = {\n        good: 0,\n        neutral: 0,\n        bad: 0\n};\n  \n  leaveFeedback = option => {\n    this.setState({ [option]: this.state[option] + 1 });\n  }\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((total, feedback) => total + feedback, 0);\n  };\n  \n countPositiveFeedbackPercentage = () => {\n   const { good } = this.state;\n   const totalFeedback = this.countTotalFeedback();\n      return  Math.round(good / totalFeedback * 100);\n };\n  \n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n      <FeedbackOptions\n        options={Object.keys(this.state)}\n        onLeaveFeedback={this.leaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ?\n            (<Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()} />) :\n            (< Notification message=\"No feedback given\" />)}\n          </Section>\n        </Container>\n    );\n    \n  };\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}